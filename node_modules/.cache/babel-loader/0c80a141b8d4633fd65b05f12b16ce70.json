{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suraj\\\\Desktop\\\\jarus9350\\\\courses\\\\react_redux\\\\burger-builder\\\\src\\\\containers\\\\BurgerBuilder\\\\Burgerbuilder.js\";\nimport React, { Component } from \"react\";\nimport Auxiliary from '../../hoc/Auxiliary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst INGREDIENTS_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass Burgerbuilder extends Component {\n  constructor() {\n    axios.get('https://react-my-burger-31e62.firebaseio.com/ingredients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    });\n  }\n\n  updatePurchasable(ingredients) {\n    // const ingredients ={\n    //     ...this.state.ingredients\n    // };\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let ordersummary = null;\n    let burger = /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 22\n      }\n    });\n\n    if (this.state.ingredients) {\n      burger = /*#__PURE__*/React.createElement(Auxiliary, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        price: this.state.totalPrice,\n        purchasable: this.state.purchasable,\n        ordered: this.purchaseHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }));\n      ordersummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinue: this.purchaseContinueHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 24\n        }\n      });\n    }\n\n    if (this.state.loading) {\n      ordersummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 28\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Auxiliary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, ordersummary), burger);\n  }\n\n}\n\nexport default withErrorHandler(Burgerbuilder, axios);","map":{"version":3,"sources":["C:/Users/suraj/Desktop/jarus9350/courses/react_redux/burger-builder/src/containers/BurgerBuilder/Burgerbuilder.js"],"names":["React","Component","Auxiliary","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","INGREDIENTS_PRICES","salad","cheese","meat","bacon","Burgerbuilder","constructor","get","then","response","setState","ingredients","data","updatePurchasable","sum","Object","keys","map","igKey","reduce","el","purchasable","render","disabledInfo","state","key","ordersummary","burger","addIngredientHandler","removeIngredientHandler","totalPrice","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","loading","purchasing"],"mappings":"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","sourcesContent":["import React,{ Component } from \"react\";\r\nimport Auxiliary from '../../hoc/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\n\r\nconst INGREDIENTS_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nclass Burgerbuilder extends Component{\r\n    state = {\r\n        ingredients :null,\r\n        /*{\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        }*/\r\n        totalPrice: 4,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false,\r\n    }\r\n\r\n    constructor(){\r\n        axios.get('https://react-my-burger-31e62.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                this.setState({ingredients: response.data})\r\n            })\r\n        \r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        //alert('you continue');\r\n        this.setState({loading: true})\r\n        const order = {\r\n            ingredients: this.state.ingredients,\r\n            price: this.state.totalPrice,\r\n            customer: {\r\n                name: 'suraj pratap singh',\r\n                address: {\r\n                    street: '76-b',\r\n                    zipcode: '110018',\r\n                    country: 'Germany'\r\n                },\r\n                email: 'jarus9350pratap@gmail.com',\r\n            },\r\n            deliveryMethod:'fastest'\r\n        }\r\n        axios.post('/orders.json',order)\r\n            .then(response => {\r\n                this.setState({loading: false, purchasing : false})\r\n            })\r\n            .catch(error => {\r\n                this.setState({loading: false, purchasing : false})\r\n            });\r\n\r\n    }\r\n\r\n    updatePurchasable(ingredients){\r\n        // const ingredients ={\r\n        //     ...this.state.ingredients\r\n        // };\r\n        const sum = Object.keys(ingredients).map((igKey) =>{\r\n            return ingredients[igKey];\r\n        })\r\n        .reduce((sum, el) => {\r\n            return sum + el;\r\n        },0)\r\n        this.setState({purchasable : sum > 0})\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENTS_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({totalPrice: newPrice , ingredients: updatedIngredients});\r\n        this.updatePurchasable(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0){\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENTS_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({totalPrice: newPrice , ingredients: updatedIngredients});\r\n        this.updatePurchasable(updatedIngredients);\r\n        \r\n    }\r\n\r\n       render(){\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        }\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n        let ordersummary = null;\r\n        let burger = <Spinner/>\r\n        if (this.state.ingredients){\r\n        burger = (\r\n            <Auxiliary>\r\n                <Burger ingredients = {this.state.ingredients}/>\r\n                <BuildControls ingredientAdded={this.addIngredientHandler} \r\n                    ingredientRemoved={this.removeIngredientHandler} \r\n                    disabled={disabledInfo}\r\n                    price={this.state.totalPrice}\r\n                    purchasable ={this.state.purchasable}\r\n                    ordered ={this.purchaseHandler}/>\r\n            </Auxiliary>\r\n        )\r\n        ordersummary = <OrderSummary \r\n            ingredients={this.state.ingredients} \r\n            price={this.state.totalPrice} \r\n            purchaseCancelled = {this.purchaseCancelHandler}\r\n            purchaseContinue = {this.purchaseContinueHandler}/>\r\n        }\r\n        if (this.state.loading) {\r\n            ordersummary = <Spinner />;\r\n        }\r\n            \r\n\r\n        return (\r\n            <Auxiliary>\r\n                <Modal \r\n                    show = {this.state.purchasing} \r\n                    modalClosed={this.purchaseCancelHandler}>\r\n                    {ordersummary}\r\n                </Modal>\r\n                {burger}\r\n            </Auxiliary>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(Burgerbuilder,axios);"]},"metadata":{},"sourceType":"module"}