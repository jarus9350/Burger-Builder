{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suraj\\\\Desktop\\\\jarus9350\\\\courses\\\\react_redux\\\\burger-builder\\\\src\\\\containers\\\\BurgerBuilder\\\\Burgerbuilder.js\";\nimport React, { Component } from \"react\";\nimport Auxiliary from '../../hoc/Auxiliary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nconst INGREDIENTS_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass Burgerbuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      //alert('you continue');\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'suraj pratap singh',\n          address: {\n            street: '76-b',\n            zipcode: '110018',\n            country: 'Germany'\n          },\n          email: 'jarus9350pratap@gmail.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json').then(response => console.log(response)).catch(error => console.log(error));\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENTS_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchasable(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENTS_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchasable(updatedIngredients);\n    };\n  }\n\n  updatePurchasable(ingredients) {\n    // const ingredients ={\n    //     ...this.state.ingredients\n    // };\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Auxiliary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      price: this.state.totalPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      purchasable: this.state.purchasable,\n      ordered: this.purchaseHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Burgerbuilder;","map":{"version":3,"sources":["C:/Users/suraj/Desktop/jarus9350/courses/react_redux/burger-builder/src/containers/BurgerBuilder/Burgerbuilder.js"],"names":["React","Component","Auxiliary","Burger","BuildControls","Modal","OrderSummary","axios","INGREDIENTS_PRICES","salad","cheese","meat","bacon","Burgerbuilder","state","ingredients","totalPrice","purchasable","purchasing","purchaseHandler","setState","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","address","street","zipcode","country","email","deliveryMethod","post","then","response","console","log","catch","error","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","updatePurchasable","removeIngredientHandler","priceDeduction","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React,{ Component } from \"react\";\r\nimport Auxiliary from '../../hoc/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\n\r\nconst INGREDIENTS_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nclass Burgerbuilder extends Component{\r\n    state = {\r\n        ingredients :{\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 4,\r\n        purchasable: false,\r\n        purchasing: false\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        //alert('you continue');\r\n        const order = {\r\n            ingredients: this.state.ingredients,\r\n            price: this.state.totalPrice,\r\n            customer: {\r\n                name: 'suraj pratap singh',\r\n                address: {\r\n                    street: '76-b',\r\n                    zipcode: '110018',\r\n                    country: 'Germany'\r\n                },\r\n                email: 'jarus9350pratap@gmail.com',\r\n            },\r\n            deliveryMethod:'fastest'\r\n        }\r\n        axios.post('/orders.json')\r\n            .then(response => console.log(response))\r\n            .catch(error => console.log(error));\r\n\r\n    }\r\n\r\n    updatePurchasable(ingredients){\r\n        // const ingredients ={\r\n        //     ...this.state.ingredients\r\n        // };\r\n        const sum = Object.keys(ingredients).map((igKey) =>{\r\n            return ingredients[igKey];\r\n        })\r\n        .reduce((sum, el) => {\r\n            return sum + el;\r\n        },0)\r\n        this.setState({purchasable : sum > 0})\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENTS_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({totalPrice: newPrice , ingredients: updatedIngredients});\r\n        this.updatePurchasable(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0){\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENTS_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({totalPrice: newPrice , ingredients: updatedIngredients});\r\n        this.updatePurchasable(updatedIngredients);\r\n        \r\n    }\r\n\r\n       render(){\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        }\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n        return (\r\n            <Auxiliary>\r\n                <Modal show = {this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    <OrderSummary ingredients={this.state.ingredients} price={this.state.totalPrice}/>\r\n                </Modal>\r\n                <Burger ingredients = {this.state.ingredients}/>\r\n                <BuildControls ingredientAdded={this.addIngredientHandler} ingredientRemoved={this.removeIngredientHandler} \r\n                disabled={disabledInfo}\r\n                price={this.state.totalPrice}\r\n                purchasable ={this.state.purchasable}\r\n                ordered ={this.purchaseHandler}/>\r\n            </Auxiliary>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Burgerbuilder;"]},"metadata":{},"sourceType":"module"}